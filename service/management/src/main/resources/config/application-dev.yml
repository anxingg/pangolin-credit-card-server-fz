spring:
    profiles:
        active: dev
        include: swagger
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    data:
        mongodb:
            uri: mongodb://106.14.206.231:27017
            database: new_pangolin_management_db
    rabbitmq:
        username: fuzhou
        password: fuzhou
        host: 106.14.206.231
        virtual-host: fuzhou
        port: 5672
    redis:
      database: 0
      host: 106.14.206.231
      port: 6379
    boot:
      admin:
        client:
          url: http://localhost:8762
    quartz:
              properties:
                org:
                  quartz:
                     scheduler:
                            # # The same cluster name on each node
                            instanceName: clusteredScheduler
                            # # Must be unique for each node or AUTO to use autogenerated
                            instanceId: AUTO
                     jobStore:
                            # Use the MongoDB store
                            class: com.novemberain.quartz.mongodb.MongoDBJobStore
                            # MongoDB URI (optional if 'org.quartz.jobStore.addresses' is set)
                            mongoUri: mongodb://192.168.3.2:27017
                            # comma separated list of mongodb hosts/replica set seeds (optional if 'org.quartz.jobStore.mongoUri' is set)
                            #org.quartz.jobStore.addresses=host1,host2
                            # database name
                            dbName: new_pangolin_management_db
                            # Will be used to create collections like mycol_jobs, mycol_triggers, mycol_calendars, mycol_locks
                            collectionPrefix: quartz_
                            # turn clustering on:
                            isClustered: true
                            # Frequency (in milliseconds) at which this instance checks-in to cluster.
                            clusterCheckinInterval: 10000
                            #JobDataMap
                            jobDataAsBase64: false
                            # Time in millis after which a trigger can be considered as expired.
                            triggerTimeoutMillis : 1200000
                            # Time in millis after which a job can be considered as expired.
                            jobTimeoutMillis: 1200000
                            #Time limit in millis after which a trigger should be treated as misfired.
                            misfireThreshold: 10000
                            #WriteConcern timeout in millis when writing in Replica Set.
                            mongoOptionWriteConcernTimeoutMillis: 10000
                     threadPool:
                            class: org.quartz.simpl.SimpleThreadPool
                            threadCount: 10
                            threadPriority: 5
                            threadsInheritContextClassLoaderOfInitializingThread: true
              job-store-type: jdbc
management:
  endpoints:
    web:
      exposure:
        include: "*"
eureka:
  instance:
    hostname: management-service
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
            defaultZone: http://localhost:8761/eureka/
server:
    port: 9001
